version: 2.1

commands:
  test:
    description: "execute tests and generate coverage profile"
    parameters:
      coverprofile:
        type: string
        default: "coverage.txt"
      covermode:
        type: string
        default: "atomic"
      target:
        type: string
        default: "./..."
    steps:
      - run:
          name: tidy
          command: go mod tidy
          working_directory: server
      - run:
          name: test and get coverage
          command: go test -v -race -coverprofile=<< parameters.coverprofile >> -covermode=<< parameters.covermode >> << parameters.target >>
          working_directory: server

jobs:
  build:
    docker:
    - image: circleci/golang:1.17
    environment:
    - GOPATH: "/go"
    steps:
    - checkout

    - restore_cache:
        keys:
        - go-module-{{ checksum "/home/circleci/project/server/go.sum" }}
        - go-module-

    - save_cache:
        key: go-module-{{ checksum "/home/circleci/project/server/go.sum" }}
        paths:
        - /go/pkg/mod/cache

    - run:
        name: build
        command: make build
        working_directory: server

  test:
    docker:
    - image: circleci/golang:1.17
    environment:
    - GOPATH: "/go"
    steps:
    - checkout

    - restore_cache:
        keys:
        - go-module-{{ checksum "/home/circleci/project/server/go.sum" }}
        - go-module-

    - test

    - run:
        name: upload coverage profile
        command: bash <(curl -s https://codecov.io/bash)
        working_directory: server

workflows:
  version: 2
  test:
    jobs:
    - build
    - test:
        requires:
        - build

